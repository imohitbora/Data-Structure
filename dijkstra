#include <iostream>
#include<limits.h>
#include<vector>
using namespace std;
vector<bool>visited;
vector<int>dis;
int r;
int minimum()
{
  int index,min=INT_MAX;
  for(int i=0;i<r;i++)
    if(min>dis[i])
   	    { min=dis[i];
   	      index=i;
   	    }
   return index;	    
  }	
 void print()
{
	for(int i=0;i<r;i++)
	  cout<<i<<"\t"<<dis[i]<<endl;
} 
void dijkstra(vector<vector<int> >*graph,int s)
{  
   dis[s]=0;
   
   for(int c=0;c<r;c++ )
   {
   	 int u=minimum();
   	 visited[u]=true;
   	 
   	 for(int j=0;j<r;j++)
   	 if(!visited[j])
   	     if(dis[u]+graph[u][j]<dis[j])
            dis[j]=dis[u]+graph[u][j];
   }
print();
}

int main() {
	

	cin>>r;
	vector<vector<int> >graph(r,vector<int>(r,0));
	visited=vector<bool>(r,0);
	dis=vector<int>(r,INT_MAX);
	for(int i=0;i<r;i++)
	  for(int j=0;j<r;j++)
	   cin>> graph[i][j];
	dijkstra(graph,0);  
	   
	return 0;
}
